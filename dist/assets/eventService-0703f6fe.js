import{k as s}from"./index-d63ee538.js";import"./vendor-021dee49.js";import"./utils-917b1704.js";import"./router-3052588b.js";const v={async getAllEvents(t={}){return(await s.get("/events",{params:t})).data},async getPublicEvents(t={}){try{return(await s.get("/events",{params:t})).data}catch(e){throw console.error("Error fetching public events:",e),e}},async getEventById(t){return(await s.get(`/events/${t}`)).data},async createEvent(t){return console.log("=== CREATE EVENT SERVICE ==="),console.log("Event data being sent:",t),(await s.post("/events",t)).data},async updateEvent(t,e){return(await s.put(`/events/${t}`,e)).data},async cancelEvent(t){return(await s.delete(`/events/${t}`)).data},async registerForEvent(t,e){return(await s.post(`/events/${t}/register`,{dogIds:e})).data},async cancelEventRegistration(t){return(await s.delete(`/events/${t}/register`)).data},async getOrganizerEvents(){var t;console.log("=== GET ORGANIZER EVENTS SERVICE ==="),console.log("Making request to:","/events/organizer/my-events");try{const e=await s.get("/events/organizer/my-events");return console.log("Response status:",e.status),console.log("Response data:",e.data),e.data}catch(e){throw console.error("Error in getOrganizerEvents service:",e),console.error("Error response:",(t=e.response)==null?void 0:t.data),e}},async updateParticipantStatus(t,e,n,r=""){return(await s.patch(`/events/${t}/participants/${e}`,{status:n,notes:r})).data},async grantEventPermission(t,e){return(await s.patch(`/events/permissions/${t}`,e)).data},async getGardenEvents(t,e={}){return(await s.get("/events",{params:{gardenId:t,...e}})).data}};export{v as eventService};
